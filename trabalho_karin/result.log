========== Begin algorithm params =========
<class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>
{'warm_start': False, 'activation': 'relu', 'validation_fraction': 0.1, 'momentum': 0.9, 'learning_rate_init': 0.001, 'power_t': 0.5, 'tol': 0.0001, 'early_stopping': False, 'nesterovs_momentum': True, 'solver': 'adam', 'shuffle': True, 'epsilon': 1e-08, 'learning_rate': 'constant', 'hidden_layer_sizes': 460, 'random_state': None, 'batch_size': 'auto', 'beta_1': 0.9, 'beta_2': 0.999, 'verbose': False, 'max_iter': 300, 'alpha': 0.0001}
<class 'sklearn.tree.tree.DecisionTreeClassifier'>
{'presort': False, 'max_leaf_nodes': None, 'splitter': 'best', 'max_features': None, 'min_impurity_split': 1e-07, 'min_samples_leaf': 1, 'max_depth': 5, 'min_weight_fraction_leaf': 0.0, 'random_state': None, 'criterion': 'entropy', 'class_weight': None, 'min_samples_split': 2}
<class 'sklearn.svm.classes.SVC'>
{'degree': 3, 'verbose': False, 'probability': False, 'kernel': 'rbf', 'coef0': 0.0, 'class_weight': None, 'tol': 0.001, 'decision_function_shape': None, 'shrinking': True, 'C': 111.04379479869915, 'random_state': None, 'gamma': 0.20220149100298002, 'cache_size': 200, 'max_iter': 300}
<class 'sklearn.ensemble.forest.RandomForestClassifier'>
{'warm_start': False, 'max_leaf_nodes': None, 'n_jobs': 1, 'n_estimators': 17, 'min_impurity_split': 1e-07, 'min_samples_leaf': 1, 'min_samples_split': 2, 'max_depth': 7, 'oob_score': False, 'min_weight_fraction_leaf': 0.0, 'random_state': None, 'criterion': 'gini', 'bootstrap': True, 'verbose': 0, 'class_weight': None, 'max_features': 'auto'}
========== End algorithm params =========
========== Begin algorithm params =========
<class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>
{'momentum': 0.9, 'epsilon': 1e-08, 'beta_1': 0.9, 'validation_fraction': 0.1, 'beta_2': 0.999, 'alpha': 0.0001, 'learning_rate': 'constant', 'hidden_layer_sizes': array([150, 529, 326]), 'tol': 0.0001, 'power_t': 0.5, 'warm_start': False, 'learning_rate_init': 0.001, 'solver': 'adam', 'activation': 'tanh', 'early_stopping': False, 'max_iter': 300, 'random_state': None, 'nesterovs_momentum': True, 'batch_size': 'auto', 'shuffle': True, 'verbose': False}
<class 'sklearn.tree.tree.DecisionTreeClassifier'>
{'min_weight_fraction_leaf': 0.0, 'min_samples_split': 2, 'criterion': 'entropy', 'class_weight': None, 'presort': False, 'min_samples_leaf': 1, 'max_leaf_nodes': None, 'max_features': None, 'random_state': None, 'splitter': 'best', 'min_impurity_split': 1e-07, 'max_depth': 5}
<class 'sklearn.svm.classes.SVC'>
{'kernel': 'sigmoid', 'class_weight': None, 'probability': False, 'gamma': 0.21118890744217644, 'verbose': False, 'decision_function_shape': None, 'shrinking': True, 'degree': 3, 'random_state': None, 'max_iter': 300, 'coef0': 0.0, 'tol': 0.001, 'cache_size': 200, 'C': 152.1342840585081}
<class 'sklearn.ensemble.forest.RandomForestClassifier'>
{'min_weight_fraction_leaf': 0.0, 'min_samples_split': 2, 'warm_start': False, 'criterion': 'entropy', 'class_weight': None, 'verbose': 0, 'n_jobs': 1, 'min_samples_leaf': 1, 'max_leaf_nodes': None, 'n_estimators': 19, 'max_features': 'auto', 'random_state': None, 'bootstrap': True, 'min_impurity_split': 1e-07, 'oob_score': False, 'max_depth': 3}
========== End algorithm params =========
========== Begin algorithm params =========
<class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>
{'verbose': False, 'beta_1': 0.9, 'momentum': 0.9, 'nesterovs_momentum': True, 'beta_2': 0.999, 'power_t': 0.5, 'hidden_layer_sizes': array([225, 281, 166]), 'solver': 'adam', 'epsilon': 1e-08, 'activation': 'tanh', 'validation_fraction': 0.1, 'warm_start': False, 'learning_rate': 'constant', 'batch_size': 'auto', 'tol': 0.0001, 'alpha': 0.0001, 'shuffle': True, 'max_iter': 300, 'early_stopping': False, 'learning_rate_init': 0.001, 'random_state': None}
<class 'sklearn.tree.tree.DecisionTreeClassifier'>
{'max_features': None, 'min_samples_leaf': 1, 'class_weight': None, 'presort': False, 'min_weight_fraction_leaf': 0.0, 'min_samples_split': 2, 'criterion': 'gini', 'min_impurity_split': 1e-07, 'max_leaf_nodes': None, 'max_depth': 5, 'random_state': None, 'splitter': 'best'}
<class 'sklearn.svm.classes.SVC'>
{'shrinking': True, 'degree': 3, 'kernel': 'linear', 'class_weight': None, 'cache_size': 200, 'gamma': 0.13828588494423052, 'verbose': False, 'tol': 0.001, 'C': 42.68361450218534, 'decision_function_shape': None, 'max_iter': 300, 'random_state': None, 'coef0': 0.0, 'probability': False}
<class 'sklearn.ensemble.forest.RandomForestClassifier'>
{'random_state': None, 'max_features': 'auto', 'class_weight': None, 'bootstrap': True, 'warm_start': False, 'verbose': 0, 'n_jobs': 1, 'min_weight_fraction_leaf': 0.0, 'min_samples_split': 2, 'criterion': 'gini', 'oob_score': False, 'n_estimators': 10, 'max_leaf_nodes': None, 'max_depth': 5, 'min_impurity_split': 1e-07, 'min_samples_leaf': 1}
========== End algorithm params =========
========== Begin algorithm params =========
<class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>
{'batch_size': 'auto', 'alpha': 0.0001, 'max_iter': 300, 'beta_1': 0.9, 'shuffle': True, 'beta_2': 0.999, 'learning_rate': 'constant', 'early_stopping': False, 'tol': 0.0001, 'random_state': None, 'momentum': 0.9, 'verbose': False, 'activation': 'tanh', 'learning_rate_init': 0.001, 'validation_fraction': 0.1, 'power_t': 0.5, 'solver': 'adam', 'hidden_layer_sizes': array([325]), 'warm_start': False, 'epsilon': 1e-08, 'nesterovs_momentum': True}
<class 'sklearn.tree.tree.DecisionTreeClassifier'>
{'criterion': 'gini', 'presort': False, 'max_depth': 7, 'random_state': None, 'class_weight': None, 'min_weight_fraction_leaf': 0.0, 'min_samples_split': 2, 'max_features': None, 'splitter': 'best', 'min_samples_leaf': 1, 'max_leaf_nodes': None, 'min_impurity_split': 1e-07}
<class 'sklearn.svm.classes.SVC'>
{'gamma': 0.014551976633843448, 'degree': 3, 'max_iter': 300, 'C': 29.50156126338616, 'class_weight': None, 'cache_size': 200, 'tol': 0.001, 'random_state': None, 'shrinking': True, 'verbose': False, 'kernel': 'linear', 'probability': False, 'coef0': 0.0, 'decision_function_shape': None}
<class 'sklearn.ensemble.forest.RandomForestClassifier'>
{'criterion': 'entropy', 'max_depth': 7, 'bootstrap': True, 'random_state': None, 'n_jobs': 1, 'class_weight': None, 'min_weight_fraction_leaf': 0.0, 'min_samples_split': 2, 'n_estimators': 17, 'max_features': 'auto', 'min_samples_leaf': 1, 'warm_start': False, 'oob_score': False, 'verbose': 0, 'max_leaf_nodes': None, 'min_impurity_split': 1e-07}
========== End algorithm params =========
========== Begin algorithm params =========
<class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>
{'batch_size': 'auto', 'random_state': None, 'momentum': 0.9, 'early_stopping': False, 'max_iter': 300, 'verbose': False, 'warm_start': False, 'tol': 0.0001, 'validation_fraction': 0.1, 'beta_2': 0.999, 'shuffle': True, 'epsilon': 1e-08, 'beta_1': 0.9, 'power_t': 0.5, 'activation': 'relu', 'hidden_layer_sizes': array([349, 240]), 'learning_rate_init': 0.001, 'nesterovs_momentum': True, 'alpha': 0.0001, 'solver': 'adam', 'learning_rate': 'constant'}
<class 'sklearn.tree.tree.DecisionTreeClassifier'>
{'random_state': None, 'criterion': 'gini', 'min_impurity_split': 1e-07, 'min_weight_fraction_leaf': 0.0, 'splitter': 'best', 'min_samples_leaf': 1, 'class_weight': None, 'max_depth': 4, 'max_features': None, 'min_samples_split': 2, 'presort': False, 'max_leaf_nodes': None}
<class 'sklearn.svm.classes.SVC'>
{'decision_function_shape': None, 'coef0': 0.0, 'degree': 3, 'verbose': False, 'cache_size': 200, 'C': 268.9185496343076, 'random_state': None, 'probability': False, 'class_weight': None, 'kernel': 'sigmoid', 'shrinking': True, 'tol': 0.001, 'gamma': 0.07148668503737772, 'max_iter': 300}
<class 'sklearn.ensemble.forest.RandomForestClassifier'>
{'random_state': None, 'criterion': 'entropy', 'verbose': 0, 'min_impurity_split': 1e-07, 'warm_start': False, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 23, 'oob_score': False, 'min_samples_leaf': 1, 'class_weight': None, 'n_jobs': 1, 'max_depth': None, 'bootstrap': True, 'max_features': 'auto', 'min_samples_split': 2, 'max_leaf_nodes': None}
========== End algorithm params =========
========== Begin algorithm params =========
<class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>
{'beta_1': 0.9, 'epsilon': 1e-08, 'tol': 0.0001, 'solver': 'adam', 'warm_start': False, 'momentum': 0.9, 'early_stopping': False, 'batch_size': 'auto', 'shuffle': True, 'max_iter': 300, 'verbose': False, 'beta_2': 0.999, 'validation_fraction': 0.1, 'random_state': None, 'power_t': 0.5, 'learning_rate': 'constant', 'alpha': 0.0001, 'nesterovs_momentum': True, 'hidden_layer_sizes': array([152, 597, 114]), 'activation': 'tanh', 'learning_rate_init': 0.001}
<class 'sklearn.tree.tree.DecisionTreeClassifier'>
{'max_leaf_nodes': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'criterion': 'gini', 'class_weight': None, 'max_depth': 5, 'presort': False, 'max_features': None, 'random_state': None, 'min_impurity_split': 1e-07, 'min_weight_fraction_leaf': 0.0, 'splitter': 'best'}
<class 'sklearn.svm.classes.SVC'>
{'verbose': False, 'shrinking': True, 'coef0': 0.0, 'probability': False, 'class_weight': None, 'tol': 0.001, 'decision_function_shape': None, 'C': 110.57636486294807, 'gamma': 0.024380226626797282, 'random_state': None, 'cache_size': 200, 'kernel': 'linear', 'degree': 3, 'max_iter': 300}
<class 'sklearn.ensemble.forest.RandomForestClassifier'>
{'max_leaf_nodes': None, 'verbose': 0, 'random_state': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'criterion': 'gini', 'bootstrap': True, 'max_depth': 3, 'oob_score': False, 'max_features': 'auto', 'class_weight': None, 'n_estimators': 16, 'min_impurity_split': 1e-07, 'n_jobs': 1, 'min_weight_fraction_leaf': 0.0, 'warm_start': False}
========== End algorithm params =========
========== Begin algorithm params =========
<class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>
{'solver': 'adam', 'beta_1': 0.9, 'batch_size': 'auto', 'tol': 0.0001, 'verbose': False, 'epsilon': 1e-08, 'power_t': 0.5, 'max_iter': 300, 'shuffle': True, 'learning_rate': 'constant', 'warm_start': False, 'nesterovs_momentum': True, 'momentum': 0.9, 'hidden_layer_sizes': array([ 68, 200]), 'random_state': None, 'validation_fraction': 0.1, 'learning_rate_init': 0.001, 'early_stopping': False, 'beta_2': 0.999, 'alpha': 0.0001, 'activation': 'logistic'}
<class 'sklearn.tree.tree.DecisionTreeClassifier'>
{'splitter': 'best', 'min_weight_fraction_leaf': 0.0, 'min_samples_split': 2, 'min_samples_leaf': 1, 'max_depth': 3, 'criterion': 'entropy', 'max_leaf_nodes': None, 'max_features': None, 'min_impurity_split': 1e-07, 'presort': False, 'class_weight': None, 'random_state': None}
<class 'sklearn.svm.classes.SVC'>
{'degree': 3, 'shrinking': True, 'gamma': 0.02782156051765235, 'verbose': False, 'decision_function_shape': None, 'max_iter': 300, 'tol': 0.001, 'coef0': 0.0, 'probability': False, 'kernel': 'rbf', 'random_state': None, 'cache_size': 200, 'class_weight': None, 'C': 186.433058606015}
<class 'sklearn.ensemble.forest.RandomForestClassifier'>
{'min_weight_fraction_leaf': 0.0, 'oob_score': False, 'verbose': 0, 'min_samples_split': 2, 'min_samples_leaf': 1, 'bootstrap': True, 'n_estimators': 15, 'max_depth': 7, 'criterion': 'entropy', 'max_leaf_nodes': None, 'max_features': 'auto', 'min_impurity_split': 1e-07, 'n_jobs': 1, 'class_weight': None, 'random_state': None, 'warm_start': False}
========== End algorithm params =========
========== Begin algorithm params =========
<class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>
{'early_stopping': False, 'warm_start': False, 'validation_fraction': 0.1, 'beta_1': 0.9, 'verbose': False, 'random_state': None, 'max_iter': 300, 'epsilon': 1e-08, 'shuffle': True, 'alpha': 0.0001, 'power_t': 0.5, 'learning_rate_init': 0.001, 'tol': 0.0001, 'momentum': 0.9, 'beta_2': 0.999, 'activation': 'tanh', 'batch_size': 'auto', 'solver': 'adam', 'hidden_layer_sizes': array([111, 161]), 'nesterovs_momentum': True, 'learning_rate': 'constant'}
<class 'sklearn.tree.tree.DecisionTreeClassifier'>
{'random_state': None, 'min_samples_leaf': 1, 'presort': False, 'min_weight_fraction_leaf': 0.0, 'max_depth': 3, 'min_samples_split': 2, 'criterion': 'gini', 'splitter': 'best', 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_split': 1e-07, 'class_weight': None}
<class 'sklearn.svm.classes.SVC'>
{'C': 12.981119796056598, 'random_state': None, 'cache_size': 200, 'decision_function_shape': None, 'max_iter': 300, 'verbose': False, 'tol': 0.001, 'coef0': 0.0, 'shrinking': True, 'kernel': 'rbf', 'probability': False, 'gamma': 0.0374637109289848, 'degree': 3, 'class_weight': None}
<class 'sklearn.ensemble.forest.RandomForestClassifier'>
{'random_state': None, 'n_estimators': 23, 'min_samples_leaf': 1, 'bootstrap': True, 'oob_score': False, 'warm_start': False, 'min_weight_fraction_leaf': 0.0, 'verbose': 0, 'max_depth': 7, 'min_samples_split': 2, 'criterion': 'gini', 'max_features': 'auto', 'n_jobs': 1, 'max_leaf_nodes': None, 'min_impurity_split': 1e-07, 'class_weight': None}
========== End algorithm params =========
========== Begin algorithm params =========
<class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>
{'alpha': 0.0001, 'beta_1': 0.9, 'batch_size': 'auto', 'beta_2': 0.999, 'verbose': False, 'max_iter': 300, 'momentum': 0.9, 'nesterovs_momentum': True, 'learning_rate': 'constant', 'activation': 'logistic', 'solver': 'adam', 'learning_rate_init': 0.001, 'shuffle': True, 'hidden_layer_sizes': array([ 68, 152]), 'power_t': 0.5, 'early_stopping': False, 'epsilon': 1e-08, 'warm_start': False, 'random_state': None, 'tol': 0.0001, 'validation_fraction': 0.1}
========== End algorithm params =========
========== Begin algorithm params =========
<class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>
{'tol': 0.0001, 'warm_start': False, 'nesterovs_momentum': True, 'max_iter': 300, 'validation_fraction': 0.1, 'alpha': 0.0001, 'beta_1': 0.9, 'momentum': 0.9, 'random_state': None, 'early_stopping': False, 'beta_2': 0.999, 'activation': 'relu', 'power_t': 0.5, 'solver': 'adam', 'shuffle': True, 'hidden_layer_sizes': array([235]), 'learning_rate': 'constant', 'epsilon': 1e-08, 'learning_rate_init': 0.001, 'verbose': False, 'batch_size': 'auto'}
========== End algorithm params =========
========== Begin algorithm params =========
<class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>
{'random_state': None, 'hidden_layer_sizes': array([271,  84]), 'beta_2': 0.999, 'shuffle': True, 'tol': 0.0001, 'warm_start': False, 'validation_fraction': 0.1, 'solver': 'adam', 'alpha': 0.0001, 'learning_rate_init': 0.001, 'learning_rate': 'constant', 'early_stopping': False, 'momentum': 0.9, 'verbose': False, 'max_iter': 300, 'activation': 'logistic', 'nesterovs_momentum': True, 'beta_1': 0.9, 'power_t': 0.5, 'epsilon': 1e-08, 'batch_size': 'auto'}
<class 'sklearn.tree.tree.DecisionTreeClassifier'>
{'min_weight_fraction_leaf': 0.0, 'max_leaf_nodes': None, 'splitter': 'best', 'min_samples_leaf': 1, 'min_samples_split': 2, 'criterion': 'entropy', 'presort': False, 'max_depth': 3, 'class_weight': None, 'random_state': None, 'min_impurity_split': 1e-07, 'max_features': None}
<class 'sklearn.svm.classes.SVC'>
{'kernel': 'rbf', 'cache_size': 200, 'gamma': 0.029132056754404945, 'tol': 0.001, 'coef0': 0.0, 'decision_function_shape': None, 'C': 112.56304613760648, 'verbose': False, 'probability': False, 'max_iter': 300, 'degree': 3, 'class_weight': None, 'random_state': None, 'shrinking': True}
<class 'sklearn.ensemble.forest.RandomForestClassifier'>
{'warm_start': False, 'n_estimators': 16, 'max_leaf_nodes': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'criterion': 'gini', 'verbose': 0, 'min_weight_fraction_leaf': 0.0, 'bootstrap': True, 'n_jobs': 1, 'max_depth': 3, 'class_weight': None, 'random_state': None, 'min_impurity_split': 1e-07, 'oob_score': False, 'max_features': 'auto'}
========== End algorithm params =========
========== Begin algorithm params =========
<class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>
{'learning_rate': 'constant', 'momentum': 0.9, 'early_stopping': False, 'batch_size': 'auto', 'hidden_layer_sizes': array([ 50, 227]), 'verbose': False, 'random_state': None, 'shuffle': True, 'power_t': 0.5, 'tol': 0.0001, 'learning_rate_init': 0.001, 'beta_1': 0.9, 'solver': 'adam', 'alpha': 0.0001, 'nesterovs_momentum': True, 'max_iter': 300, 'warm_start': False, 'beta_2': 0.999, 'activation': 'logistic', 'validation_fraction': 0.1, 'epsilon': 1e-08}
<class 'sklearn.tree.tree.DecisionTreeClassifier'>
{'min_impurity_split': 1e-07, 'max_leaf_nodes': None, 'presort': False, 'class_weight': None, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'criterion': 'entropy', 'splitter': 'best', 'max_features': None, 'min_samples_leaf': 1, 'max_depth': 4, 'random_state': None}
<class 'sklearn.svm.classes.SVC'>
{'degree': 3, 'cache_size': 200, 'coef0': 0.0, 'class_weight': None, 'verbose': False, 'shrinking': True, 'tol': 0.001, 'max_iter': 300, 'probability': False, 'gamma': 0.18867674197713893, 'kernel': 'rbf', 'C': 25.70773574354117, 'decision_function_shape': None, 'random_state': None}
<class 'sklearn.ensemble.forest.RandomForestClassifier'>
{'n_estimators': 21, 'min_impurity_split': 1e-07, 'max_leaf_nodes': None, 'oob_score': False, 'class_weight': None, 'min_samples_split': 2, 'verbose': 0, 'min_weight_fraction_leaf': 0.0, 'bootstrap': True, 'n_jobs': 1, 'warm_start': False, 'criterion': 'entropy', 'max_features': 'auto', 'min_samples_leaf': 1, 'max_depth': 7, 'random_state': None}
========== End algorithm params =========
========== Begin algorithm params =========
<class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>
{'shuffle': True, 'beta_1': 0.9, 'random_state': None, 'power_t': 0.5, 'hidden_layer_sizes': array([236]), 'warm_start': False, 'nesterovs_momentum': True, 'learning_rate': 'constant', 'learning_rate_init': 0.001, 'solver': 'adam', 'momentum': 0.9, 'verbose': False, 'validation_fraction': 0.1, 'batch_size': 'auto', 'activation': 'relu', 'epsilon': 1e-08, 'beta_2': 0.999, 'early_stopping': False, 'tol': 0.0001, 'max_iter': 300, 'alpha': 0.0001}
<class 'sklearn.tree.tree.DecisionTreeClassifier'>
{'random_state': None, 'min_samples_leaf': 1, 'splitter': 'best', 'criterion': 'gini', 'class_weight': None, 'max_features': None, 'min_samples_split': 2, 'max_depth': 6, 'min_impurity_split': 1e-07, 'max_leaf_nodes': None, 'presort': False, 'min_weight_fraction_leaf': 0.0}
<class 'sklearn.svm.classes.SVC'>
{'gamma': 0.25448128324179414, 'tol': 0.001, 'kernel': 'rbf', 'degree': 3, 'C': 180.53340908309593, 'probability': False, 'verbose': False, 'cache_size': 200, 'shrinking': True, 'decision_function_shape': None, 'coef0': 0.0, 'max_iter': 300, 'class_weight': None, 'random_state': None}
<class 'sklearn.ensemble.forest.RandomForestClassifier'>
{'n_estimators': 17, 'random_state': None, 'min_samples_leaf': 1, 'verbose': 0, 'oob_score': False, 'criterion': 'entropy', 'warm_start': False, 'min_samples_split': 2, 'bootstrap': True, 'class_weight': None, 'max_depth': 7, 'max_features': 'auto', 'n_jobs': 1, 'min_impurity_split': 1e-07, 'max_leaf_nodes': None, 'min_weight_fraction_leaf': 0.0}
========== End algorithm params =========
========== Begin algorithm params =========
<class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>
{'learning_rate': 'constant', 'power_t': 0.5, 'random_state': None, 'shuffle': True, 'beta_1': 0.9, 'solver': 'adam', 'beta_2': 0.999, 'tol': 0.0001, 'activation': 'logistic', 'batch_size': 'auto', 'validation_fraction': 0.1, 'learning_rate_init': 0.001, 'alpha': 0.0001, 'nesterovs_momentum': True, 'hidden_layer_sizes': array([122,  69]), 'verbose': False, 'early_stopping': False, 'warm_start': False, 'max_iter': 300, 'epsilon': 1e-08, 'momentum': 0.9}
<class 'sklearn.tree.tree.DecisionTreeClassifier'>
{'splitter': 'best', 'class_weight': None, 'max_leaf_nodes': None, 'min_samples_split': 2, 'max_features': None, 'presort': False, 'max_depth': 5, 'min_impurity_split': 1e-07, 'random_state': None, 'criterion': 'gini', 'min_samples_leaf': 1, 'min_weight_fraction_leaf': 0.0}
<class 'sklearn.svm.classes.SVC'>
{'class_weight': None, 'coef0': 0.0, 'decision_function_shape': None, 'tol': 0.001, 'cache_size': 200, 'probability': False, 'C': 4.37164983689961, 'kernel': 'rbf', 'verbose': False, 'degree': 3, 'random_state': None, 'shrinking': True, 'max_iter': 300, 'gamma': 0.15545997392753363}
<class 'sklearn.ensemble.forest.RandomForestClassifier'>
{'random_state': None, 'class_weight': None, 'max_leaf_nodes': None, 'n_jobs': 1, 'min_samples_split': 2, 'oob_score': False, 'bootstrap': True, 'max_features': 'auto', 'max_depth': 5, 'verbose': 0, 'min_impurity_split': 1e-07, 'n_estimators': 21, 'criterion': 'entropy', 'warm_start': False, 'min_samples_leaf': 1, 'min_weight_fraction_leaf': 0.0}
========== End algorithm params =========
========== Begin algorithm params =========
<class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>
{'solver': 'adam', 'shuffle': True, 'nesterovs_momentum': True, 'max_iter': 300, 'tol': 0.0001, 'momentum': 0.9, 'epsilon': 1e-08, 'early_stopping': False, 'batch_size': 'auto', 'power_t': 0.5, 'learning_rate': 'constant', 'activation': 'logistic', 'warm_start': False, 'learning_rate_init': 0.001, 'beta_2': 0.999, 'verbose': False, 'beta_1': 0.9, 'hidden_layer_sizes': array([237,  95]), 'validation_fraction': 0.1, 'alpha': 0.0001, 'random_state': None}
<class 'sklearn.tree.tree.DecisionTreeClassifier'>
{'splitter': 'best', 'max_features': None, 'max_depth': 3, 'max_leaf_nodes': None, 'min_samples_leaf': 1, 'criterion': 'gini', 'min_samples_split': 2, 'min_impurity_split': 1e-07, 'min_weight_fraction_leaf': 0.0, 'presort': False, 'class_weight': None, 'random_state': None}
<class 'sklearn.svm.classes.SVC'>
{'C': 8.637962461850352, 'decision_function_shape': None, 'kernel': 'rbf', 'max_iter': 300, 'gamma': 0.22755611446481142, 'coef0': 0.0, 'tol': 0.001, 'shrinking': True, 'cache_size': 200, 'class_weight': None, 'degree': 3, 'verbose': False, 'probability': False, 'random_state': None}
<class 'sklearn.ensemble.forest.RandomForestClassifier'>
{'max_features': 'auto', 'bootstrap': True, 'max_leaf_nodes': None, 'min_samples_leaf': 1, 'oob_score': False, 'criterion': 'gini', 'min_samples_split': 2, 'max_depth': 5, 'min_weight_fraction_leaf': 0.0, 'warm_start': False, 'n_jobs': 1, 'class_weight': None, 'verbose': 0, 'n_estimators': 16, 'min_impurity_split': 1e-07, 'random_state': None}
========== End algorithm params =========
========== Begin algorithm params =========
<class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>
{'random_state': None, 'tol': 0.0001, 'early_stopping': False, 'power_t': 0.5, 'nesterovs_momentum': True, 'solver': 'adam', 'warm_start': False, 'shuffle': True, 'learning_rate_init': 0.001, 'validation_fraction': 0.1, 'alpha': 0.0001, 'max_iter': 300, 'batch_size': 'auto', 'epsilon': 1e-08, 'verbose': False, 'hidden_layer_sizes': array([117,  93]), 'learning_rate': 'constant', 'momentum': 0.9, 'activation': 'logistic', 'beta_1': 0.9, 'beta_2': 0.999}
<class 'sklearn.tree.tree.DecisionTreeClassifier'>
{'max_depth': 3, 'min_weight_fraction_leaf': 0.0, 'max_features': None, 'max_leaf_nodes': None, 'random_state': None, 'splitter': 'best', 'criterion': 'gini', 'class_weight': None, 'min_samples_leaf': 1, 'min_samples_split': 2, 'presort': False, 'min_impurity_split': 1e-07}
<class 'sklearn.svm.classes.SVC'>
{'cache_size': 200, 'kernel': 'rbf', 'gamma': 0.13820486865418166, 'probability': False, 'random_state': None, 'shrinking': True, 'tol': 0.001, 'decision_function_shape': None, 'C': 0.8237680431235288, 'class_weight': None, 'max_iter': 300, 'coef0': 0.0, 'verbose': False, 'degree': 3}
<class 'sklearn.ensemble.forest.RandomForestClassifier'>
{'verbose': 0, 'max_depth': 5, 'min_weight_fraction_leaf': 0.0, 'max_features': 'auto', 'max_leaf_nodes': None, 'random_state': None, 'criterion': 'entropy', 'warm_start': False, 'class_weight': None, 'min_samples_leaf': 1, 'n_estimators': 14, 'min_samples_split': 2, 'n_jobs': 1, 'bootstrap': True, 'min_impurity_split': 1e-07, 'oob_score': False}
========== End algorithm params =========
